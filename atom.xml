<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://17603845963.github.io</id>
    <title>井 Sir 的私人博客</title>
    <updated>2020-09-09T09:22:58.144Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://17603845963.github.io"/>
    <link rel="self" href="https://17603845963.github.io/atom.xml"/>
    <subtitle>一位秀发茂密的测试工程师</subtitle>
    <logo>https://17603845963.github.io/images/avatar.png</logo>
    <icon>https://17603845963.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 井 Sir 的私人博客</rights>
    <entry>
        <title type="html"><![CDATA[谷歌浏览器如何永久阻止自动升级更新]]></title>
        <id>https://17603845963.github.io/post/gu-ge-liu-lan-qi-ru-he-yong-jiu-zu-zhi-zi-dong-sheng-ji-geng-xin/</id>
        <link href="https://17603845963.github.io/post/gu-ge-liu-lan-qi-ru-he-yong-jiu-zu-zhi-zi-dong-sheng-ji-geng-xin/">
        </link>
        <updated>2020-09-09T09:21:11.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h1 id="csdn相关博客一大堆讲的有的没的都没啥用">CSDN相关博客一大堆，讲的有的没的都没啥用</h1>
<h1 id="我这边找了好多相关文章也算是解决了这个问题">我这边找了好多相关文章也算是解决了这个问题</h1>
<h1 id="写一篇经验分享给大家">写一篇经验分享给大家：</h1>
<h3 id="只要删除cprogram-files-x86googleupdate目录下的updateexe文件即可">只要删除C:\Program Files (x86)\Google\Update目录下的update.exe文件即可</h3>
<h3 id="关键在于怎么删除所以需要进行下面的操作">【关键在于怎么删除，所以需要进行下面的操作】</h3>
</blockquote>
<hr>
<h1 id="一-先安装好-chrome-浏览器">一、先安装好 Chrome 浏览器</h1>
<ul>
<li>
<h3 id="如果你也是测试那这个77版本的你值得拥有">【如果你也是测试，那这个77版本的你值得拥有】</h3>
<blockquote>
<h3 id="链接httpspanbaiducoms19xnkulwtsylhpvh8eubgzq">链接：https://pan.baidu.com/s/19XNkuLWTSYlhPvH8eubgzQ</h3>
<h3 id="提取码oak2">提取码：oak2</h3>
</blockquote>
</li>
</ul>
<hr>
<hr>
<h1 id="二-搜索栏-输入-计算机管理-打开">二、搜索栏 &gt; 输入‘ 计算机管理 ’ &gt; 打开</h1>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200909165344368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<hr>
<hr>
<h1 id="三-系统工具-任务计划程序-任务计划程序库">三、系统工具 &gt; 任务计划程序 &gt; 任务计划程序库</h1>
<ul>
<li>
<h4 id="找到-googleupdatetaskmachinecore-和-googleupdatetaskmachineua">找到 GoogleUpdateTaskMachineCore 和 GoogleUpdateTaskMachineUA</h4>
</li>
<li>
<h1 id="右键-禁用-属性-删除所有的触发器信息">【右键 &gt; 禁用 &gt; 属性 →删除所有的触发器信息】</h1>
<img src="https://img-blog.csdnimg.cn/2020090916564226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200909170241851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200909170400390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></li>
</ul>
<h1 id="四-win-r-运行-msconfig禁用update相关服务">四、Win + R 运行 msconfig，禁用update相关服务</h1>
<p><img src="https://img-blog.csdnimg.cn/20200909170542833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200909171130696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<ul>
<li>
<blockquote>
<h1 id="确定后应该是需要重启一下电脑的">确定后应该是需要重启一下电脑的</h1>
</blockquote>
</li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20200909171721628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<ul>
<li>
<blockquote>
<h1 id="回到cprogram-files-x86googleupdate删除exe文件">回到C:\Program Files (x86)\Google\Update删除exe文件</h1>
</blockquote>
<img src="https://img-blog.csdnimg.cn/20200909171412507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></li>
</ul>
<h1 id="如图-浏览器自动更新失败禁用成功">如图 ，浏览器自动更新失败，禁用成功！</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[黑羽robot--基于 RobotFramework增强的一款自动化框架]]></title>
        <id>https://17603845963.github.io/post/hei-yu-robot-ji-yu-robotframework-zeng-qiang-de-yi-kuan-zi-dong-hua-kuang-jia/</id>
        <link href="https://17603845963.github.io/post/hei-yu-robot-ji-yu-robotframework-zeng-qiang-de-yi-kuan-zi-dong-hua-kuang-jia/">
        </link>
        <updated>2020-09-07T08:10:12.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-首先安装框架学习所需的项目系统">一、首先安装框架学习所需的项目系统</h1>
<ul>
<li>
<h2 id="bysms-系统安装与运行">Bysms 系统安装与运行</h2>
<p>1、<a href="https://pan.baidu.com/s/1rnWhuroIMNebStzpwLjsTA#list/path=%2F">网盘下载链接</a>，下载 白月SMS系统 压缩包 bysms.zip</p>
<p>2、下载解压bysms.zip后，进入bysms目录，双击运行runserver.bat 即可启动 白月SMS系统。 出现下面这样的信息</p>
</li>
</ul>
<pre><code class="language-python">System check identified no issues (0 silenced).

You have 2 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): auth.
Run 'python manage.py migrate' to apply them.
September 07, 2020 - 16:06:11
Django version 2.2.4, using settings 'bysms.settings'
Starting development server at http://127.0.0.1:8047/
Quit the server with CTRL-BREAK.
</code></pre>
<p>如果双击运行runserver.bat 出现闪退，八成是因为web服务的80端口已经被使用了。</p>
<p>两种解决方法：</p>
<ul>
<li>
<p>请检查关闭占用80端口的程序，可能是Apache、IIS等web服务。</p>
</li>
<li>
<p>文本编辑器编辑 runserver.bat</p>
</li>
<li>
<p>python manage.py runserver 80 --noreload<br>
修改网站服务端口为其他端口 比如 8047</p>
</li>
</ul>
<p>python manage.py runserver 8047 --noreload<br>
以后访问网址加上端口号，比如 http://127.0.0.1:8047/mgr/sign.html</p>
<blockquote>
<p>注意：该窗口不能关闭，否则web 系统就会停止</p>
</blockquote>
<blockquote>
<p>输入如下管理员账号</p>
</blockquote>
<blockquote>
<p>用户名 ： byhy     密码： 88888888</p>
</blockquote>
<blockquote>
<p>即可登录</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/jzq739304193/my_gitee/raw/master/pic_room/1599466872(1).jpg" alt="" loading="lazy"></figure>
<ul>
<li>
<p>测试用例下载地址：<a href="http://cdn1.python3.vip/files/selenium/testcases.xlsx">白月SMS系统的测试用例文档</a></p>
</li>
<li>
<p>接下来，我们就使用 黑羽robot 框架， 开发这些用例的自动化</p>
</li>
</ul>
<h1 id="二-安装-黑羽robot">二、安装 黑羽robot</h1>
<ul>
<li>1、确保电脑已安装Python3.7 或者 3.8 版本的解释器：python -V</li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20200907162835701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<ul>
<li>
<p>2、 pip 命令安装RobotFramework：<strong>pip3 install robotframework</strong><br>
<img src="https://img-blog.csdnimg.cn/20200907163103161.png#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li>
<p>3、安装黑羽robot<br>
<a href="http://cdn1.python3.vip/files/hyrobot/autotest_hyrobot.zip">【 点击这里下载黑羽robot项目包 】</a></p>
</li>
</ul>
<p>解压下载的zip包，会产生一个名为 autotest_hyrobot 的目录， 这就是hyrobot的自动化项目目录。</p>
<p>你修改该目录的名字，比如我们要讲解 自动化测试 白月SMS系统 ， 就可以改名为 autotest_bysms</p>
<p>建议：用PyCharm 等IDE直接打开项目文件夹，一定要 确保 hyrobot 目录 在项目根目录下面，如下<br>
<img src="http://cdn1.python3.vip/imgs/api/tut_20200831095914_20.png" alt="" loading="lazy"></p>
<ul>
<li>4、学习框架知识<br>
<a href="https://www.bilibili.com/video/av67586688/?p=3">从robotframework 到 黑羽robot - 自动化测试框架</a><br>
<a href="https://www.bilibili.com/video/BV1Uf4y1y78x">数据驱动 自动化测试 怎么做</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[奇奇怪怪的宝藏♥网站]]></title>
        <id>https://17603845963.github.io/post/qi-qi-guai-guai-de-bao-cang-wang-zhan/</id>
        <link href="https://17603845963.github.io/post/qi-qi-guai-guai-de-bao-cang-wang-zhan/">
        </link>
        <updated>2020-09-07T03:35:05.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-质量超级高的图源">一、质量超级高的图源</h1>
<ul>
<li>
<h2 id="wallpaper-超清图源"><a href="https://wall.alphacoders.com/?lang=Chinese">Wallpaper 超清图源</a></h2>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Postman+Newman+Git+Jenkins实现接口自动化测试持续集成]]></title>
        <id>https://17603845963.github.io/post/postmannewmangitjenkins-shi-xian-jie-kou-zi-dong-hua-ce-shi-chi-xu-ji-cheng/</id>
        <link href="https://17603845963.github.io/post/postmannewmangitjenkins-shi-xian-jie-kou-zi-dong-hua-ce-shi-chi-xu-ji-cheng/">
        </link>
        <updated>2020-09-07T02:21:22.000Z</updated>
        <content type="html"><![CDATA[<h1 id="postman工具常见的接口测试流程是怎样的">Postman工具常见的接口测试流程是怎样的？</h1>
<blockquote>
<h2 id="使用postmannewmangitjenkins钉钉邮件提醒">使用Postman+Newman+Git+Jenkins+钉钉/邮件提醒</h2>
</blockquote>
<hr>
<p>-------------- ♥ 以下分别讲解：windows 下的 Newman 安装 ♥----------------</p>
<hr>
<h3 id=""></h3>
<h1 id="一-windows系统newmanreporter插件安装">一、Windows系统Newman+reporter插件安装</h1>
<blockquote>
<h4 id="1-下载nodejs进行安装然后配置node的环境变量">1、下载Node.js进行安装，然后配置node的环境变量</h4>
</blockquote>
<blockquote>
<h4 id="2-借助-npm-安装-cnpm">2、借助 npm 安装 cnpm</h4>
<h5 id="npm-install-g-cnpm-registryhttpsregistrynpmtaobaoorg">npm install -g cnpm --registry=https://registry.npm.taobao.org</h5>
</blockquote>
<blockquote>
<h4 id="3-借助-cnpm-安装-newman">3、借助 cnpm 安装 Newman</h4>
<h5 id="cnpm-install-newman-global">cnpm install newman --global</h5>
<h5 id="检查是否安装成功-newman-v-显示版本号">检查是否安装成功：【  newman -v 】显示版本号</h5>
</blockquote>
<blockquote>
<h4 id="4-安装html报告插件">4、安装html报告插件</h4>
<h5 id="cnpm-install-g-newman-reporter-html">cnpm install -g newman-reporter-html</h5>
</blockquote>
<blockquote>
<h4 id="5-使用newman命令行执行测试">5、使用newman命令行执行测试</h4>
<p><strong>newman run 脚本 -e 环境文件 -n 循环次数 -r html --reporter-html-export 报告名称</strong></p>
<h2 id="这时候生成的报告有点小丑">【这时候生成的报告有点小丑】</h2>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200907092059997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
</blockquote>
<blockquote>
<h4 id="6-安装插件优化报告显示格式生成美观一点的html格式报告">6、安装插件，优化报告显示格式，生成美观一点的html格式报告</h4>
<h5 id="cnpm-install-g-newman-reporter-htmlextra">cnpm install -g newman-reporter-htmlextra</h5>
<h1 id="运行脚本">【运行脚本】：</h1>
<h5 id="newman-run-导出的postman脚本json-r-htmlextra">newman run 导出的postman脚本.json -r htmlextra</h5>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20200907092402506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
</blockquote>
<h3 id="注意事项">注意事项：</h3>
<ul>
<li>1、 -r 参数是  --reporters 的缩写，可以在参数后面指定需要生成的报告格式 ，<br>
比如 -r html , junit , json ,  htmlextra  ，这个会在当前目录下生成一个newman的文件夹，报告都在newman的文件夹下面：<br>
<img src="https://img-blog.csdnimg.cn/20200907092946211.png#pic_center" alt="在这里插入图片描述" loading="lazy"></li>
</ul>
<hr>
<ul>
<li>2、也可以加上下面的参数指定报告名称：(报告默认生成在当前执行命令的路径下 ，也可以自己在报告名称前加上指定路径生成)
<blockquote>
<h4 id="-reporter-html-export-htmlreporthtml">- -reporter-html-export htmlReport.html</h4>
<h4 id="-reporter-htmlextra-export-htmlextrareporthtml">- -reporter-htmlextra-export htmlExtraReport.html</h4>
<h4 id="-reporter-junit-export-junitreporthtml">- -reporter-junit-export junitReport.html</h4>
<h4 id="-reporter-json-export-jsonreporthtml">- -reporter-json-export jsonReport.html</h4>
</blockquote>
</li>
</ul>
<hr>
<h1 id="二-postman脚本持续集成">二、Postman脚本持续集成</h1>
<p>通过上面的描述 ，现在已经可以将postman脚本生成报告了<br>
离集成jenkins只差最后的配置工作了：</p>
<ul>
<li>
<p>1、在gitee上新建一个仓库，将postman调试好的脚本导出成json文件，上传到gitee上</p>
</li>
<li>
<p>2、搭建好jenkins环境，并配置好npm的环境以及安装好newman执行环境</p>
</li>
<li>
<p>3、新建一个自由风格的job，配置从git上获取脚本：<br>
<img src="https://img-blog.csdnimg.cn/20200907095428207.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200907095628240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li>
<p>4、构建中选择windows批处理，填入命令：<br>
<img src="https://img-blog.csdnimg.cn/20200907095740870.png#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<pre><code class="language-python"># batch命令
cd /d  %WORKSPACE%
newman run demo.postman_collection.json -r htmlextra --reporter-htmlextra-export ./report/htmlExtraReport.html 

或者

# shell 命令
cd $WORKSPACE
newman run demo.postman_collection.json -r htmlextra --reporter-htmlextra-export ./report/htmlExtraReport.html newman run demo.postman_collection.json -r htmlextra --reporter-htmlextra-export ./report/htmlExtraReport.html
</code></pre>
</li>
<li>
<p>5、在构建后操作那里 ，添加报告的展示【需安装 HTML Publisher plugin 插件】<br>
<img src="https://img-blog.csdnimg.cn/20200907100425209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200907100639774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li>
<p>6、发送企业微信通知<br>
<img src="https://img-blog.csdnimg.cn/20200907100846719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200907101105782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200907101320312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
</ul>
<hr>
<h1 id="三-解决jenkins上无法展示html样式的问题">三、解决jenkins上无法展示HTML样式的问题</h1>
<p><strong>由于安全考虑，jenkins默认是禁止了外部的css和js的加载的<br>
因此html报告显示会出现异常，常见的解决方案有以下几种：</strong></p>
<p>1、在jenkins系统管理-&gt;脚本命令行 输入以下脚本运行：（此方案重启jenkins失效）</p>
<blockquote>
<p><strong>System.setProperty(&quot;hudson.model.DirectoryBrowserSupport.CSP&quot;, &quot;&quot;)</strong></p>
</blockquote>
<p>2、利用jenkins的插件，在启动节点的时候自动触发某个job去执行groovy脚本<br>
---- 搜索安装Startup Trigger和Groovy插件即可。<br>
-----配置一个job，然后在job中执行groovy脚本：</p>
<blockquote>
<p><strong>System.setProperty(&quot;hudson.model.DirectoryBrowserSupport.CSP&quot;, &quot;&quot;)</strong></p>
</blockquote>
<p>3、以windows服务或者java -jar的方式启动的jenkins，可以修改jenkin.xml文件中的启动命令，加入参数</p>
<blockquote>
<p><strong>-Dhudson.model.DirectoryBrowserSupport.CSP=</strong></p>
</blockquote>
<p>4、用tomcat部署的jenkins，可以直接改catalina.bat文件，找到tomcat/bin下的catalina.bat文件,用Notepad++打开，加上一行代码</p>
<blockquote>
<p><strong>set JAVA_OPTS=&quot;-Dhudson.model.DirectoryBrowserSupport.CSP&quot;</strong></p>
</blockquote>
<hr>
<h1 id="四-拓展学习">四、拓展学习</h1>
<ul>
<li>
<p>1、newman其他用法<br>
(比如执行命令的时候加载环境变配置、设置执行次数等)：</p>
<blockquote>
<h4 id="httpswwwnpmjscompackagenewman">https://www.npmjs.com/package/newman</h4>
</blockquote>
</li>
<li>
<p>2、newman-reporter-htmlextra插件的其他用法<br>
(比如报告过滤数据，设置标题等)：</p>
<blockquote>
<h5 id="httpswwwnpmjscompackagenewman-reporter-htmlextra">https://www.npmjs.com/package/newman-reporter-htmlextra</h5>
</blockquote>
</li>
<li>
<p>3、钉钉通知在jenkins上的配置，还可以指定具体通知的人等高级用法，可以自己查资料扩展一下.觉得钉钉插件提醒不好用的话，也可以自己写脚本调用钉钉的接口发送消息提醒。</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python基础 --- getattr( )和setattr( )方法的使用]]></title>
        <id>https://17603845963.github.io/post/python-ji-chu-getattr-he-setattr-fang-fa-de-shi-yong/</id>
        <link href="https://17603845963.github.io/post/python-ji-chu-getattr-he-setattr-fang-fa-de-shi-yong/">
        </link>
        <updated>2020-09-06T10:41:53.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-内建函数-getattr">一、 内建函数 ： getattr ( )</h1>
<pre><code class="language-python">'''
getattr( ) : 获取属性（动态获取某个属性的值）
getattr(&quot;对象或者类名&quot; , &quot;属性名称&quot; ，&quot;当没有此属性需要提供过的默认值&quot; )
'''


class Phone:

    def __init__(self,brand):
    	# 定义一个类属性
        self.brand = brand

    def call(self):
    	# 定义一个实例属性
        self.num = '120'
        print(&quot;正在打电话&quot;)

    def send_message(self):
        print(&quot;正在发消息&quot;)


iphone = Phone('OPPO')

# 这里的brand打印OPPO是因为上面传入了类属性
print(getattr(iphone,&quot;brand&quot;))

# 这里的num之所以打印110而不是120，是因为不可以使用 类.实例属性 方法，所以取默认值 110
# 类.类属性 √     类.实例属性 X
print(getattr(Phone,&quot;num&quot;,&quot;110&quot;)))


# 打印结果
C:\Users\86176\AppData\Local\Programs\Python\Python36\python.exe &quot;D:/PyCharm_Community/CSDN_blog/getattr+setattr/getattr( ).py&quot;
OPPO
110

Process finished with exit code 0
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[推荐软件测试 (python) 的B站宝藏视频]]></title>
        <id>https://17603845963.github.io/post/tui-jian-gei-zi-xue-ruan-jian-ce-shi-pythonde-b-zhan-bao-cang-shi-pin/</id>
        <link href="https://17603845963.github.io/post/tui-jian-gei-zi-xue-ruan-jian-ce-shi-pythonde-b-zhan-bao-cang-shi-pin/">
        </link>
        <updated>2020-09-04T11:58:13.000Z</updated>
        <content type="html"><![CDATA[<hr>
<hr>
<h1 id="️️️-bv19t411m7uu">❤️❤️❤️ BV19t411m7uU</h1>
<ul>
<li>
<h1 id="python基础入门up主是个声音特别好听的小姐姐">python基础入门【up主是个声音特别好听的小姐姐】</h1>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200904200329592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<hr>
</li>
</ul>
<h1 id="bv1bv41167a4">💛💛💛 BV1bV41167a4</h1>
<ul>
<li>
<h1 id="pytest框架unittest进阶版框架">Pytest框架【unittest进阶版框架】</h1>
<img src="https://img-blog.csdnimg.cn/20200904201237485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></li>
</ul>
<h1 id="">💚💚💚</h1>
<h1 id="-2">💙💙💙</h1>
<h1 id="-3">💜💜💜</h1>
<h1 id="-4">🖤🖤🖤</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[推荐给自学软件测试（python）的宝藏视频]]></title>
        <id>https://17603845963.github.io/post/tui-jian-gei-zi-xue-ruan-jian-ce-shi-pythonde-bao-cang-shi-pin/</id>
        <link href="https://17603845963.github.io/post/tui-jian-gei-zi-xue-ruan-jian-ce-shi-pythonde-bao-cang-shi-pin/">
        </link>
        <updated>2020-09-04T11:58:13.000Z</updated>
        <content type="html"><![CDATA[<h1 id="️-bv19t411m7uu">❤️ BV19t411m7uU</h1>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200904200329592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="">💛</h1>
<h1 id="-2">💚</h1>
<h1 id="-3">💙</h1>
<h1 id="-4">💜</h1>
<h1 id="-5">🖤</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github下载与使用]]></title>
        <id>https://17603845963.github.io/post/github-xia-zai-yu-shi-yong/</id>
        <link href="https://17603845963.github.io/post/github-xia-zai-yu-shi-yong/">
        </link>
        <updated>2020-09-03T12:27:31.000Z</updated>
        <content type="html"><![CDATA[<p>官网下载真的是好慢好慢。。附上网盘链接<br>
windows（64位）<br>
<strong>链接：https://pan.baidu.com/s/1bRndwnVtCY_wE1A26Xtzeg<br>
提取码：yvpk</strong></p>
<p><strong>1.下载完毕后就傻瓜式默认一步步安装（保持默认选项即可）<br>
2.安装完毕后在桌面点击鼠标右键，显示如下：</strong><br>
<img src="https://img-blog.csdnimg.cn/20200503144240423.png" alt="在这里插入图片描述" loading="lazy"></p>
<p><strong>3.验证Git是否安装成功：</strong><br>
①win+R→cmd→打开命令提示符<br>
②输入：git --version<br>
③显示如下信息即为安装成功<br>
<img src="https://img-blog.csdnimg.cn/20200503144724713.png" alt="在这里插入图片描述" loading="lazy"><br>
<strong>4.需要在官网注册Git账号：https://github.com</strong><br>
注册账号时请退出电脑上的杀毒软件，如：电脑管家、360等。。。<br>
看不懂可以使用谷歌浏览器登录，右键翻译网页还是挺好用的</p>
<p><strong>5.配置sshkey：</strong><br>
桌面鼠标右键点击【Git Bash Here】</p>
<p>①回到根目录下：</p>
<pre><code class="language-bash">cd /
</code></pre>
<p>②生成key(跟注册的邮箱地址)：</p>
<pre><code class="language-bash">ssh -keygen -t rsa -C &quot;xxxxx@163.com/qq.com&quot;
</code></pre>
<p>③进入.ssh目录(生成了两个 id_rsa 文件)：</p>
<pre><code class="language-bash">cd ~/.ssh
</code></pre>
<p>④获取ssh-key：</p>
<pre><code class="language-bash">cat id_rsa.pub
</code></pre>
<p>#此时生成了一大串字符，全部复制<br>
<img src="https://img-blog.csdnimg.cn/20200503151220229.png" alt="在这里插入图片描述" loading="lazy"></p>
<p><strong>⑤复制ssh-key，登录Github，点击个人信息【倒三角】进入setting设置</strong><br>
<img src="https://img-blog.csdnimg.cn/20200503151538749.png" alt="在这里插入图片描述" loading="lazy"><br>
<strong>⑥选择【SSH and GPG keys】并新建ssh key</strong><br>
<img src="https://img-blog.csdnimg.cn/20200503151719882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
<strong>⑦点击创建后，ssh key配置完成</strong><br>
<img src="https://img-blog.csdnimg.cn/20200503152113557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pfX19fX1E=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Python发送Get/Post请求]]></title>
        <id>https://17603845963.github.io/post/shi-yong-python-fa-song-getpost-qing-qiu/</id>
        <link href="https://17603845963.github.io/post/shi-yong-python-fa-song-getpost-qing-qiu/">
        </link>
        <updated>2020-09-03T12:26:49.000Z</updated>
        <content type="html"><![CDATA[<p>需要导入requests模块：</p>
<pre><code class="language-python">import requests
</code></pre>
<p>①发送 get 请求：</p>
<pre><code class="language-python"># get 请求
url = &quot;http://www.baidu.com&quot;
res = requests.get(url) # ↑返回一个消息实体（响应头、报文、状态码等）
print(res)
print(&quot;响应头&quot;,res.headers)
print(&quot;响应状态码&quot;,res.status_code)
print(&quot;响应正文&quot;,res.text)
</code></pre>
<p>②发送post请求：</p>
<pre><code class="language-python"># post 请求
url='https://xxxx.com'
data={&quot;username&quot;:&quot;test&quot;,&quot;pwd&quot;:&quot;test&quot;}
res=requests.post(url,data)
print(&quot;响应头&quot;,res.headers)
print(&quot;响应状态码&quot;,res.status_code)
print(&quot;响应cookies&quot;,res.cookies) # 登录成功后才会显示
print(&quot;cookie的value值&quot;,res.cookies['JSESSIONID(key属性名)']) # 类字典形式通过key取值
print(&quot;响应正文1&quot;,res.text)    # 返回类型为 html 、xml、json 均可使用
print(&quot;响应正文2&quot;,res.json())  # 只有json类型的返回值才可以使用.json
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python中For循环语句的使用（配合各种问题）]]></title>
        <id>https://17603845963.github.io/post/python-zhong-for-xun-huan-yu-ju-de-shi-yong-pei-he-ge-chong-wen-ti/</id>
        <link href="https://17603845963.github.io/post/python-zhong-for-xun-huan-yu-ju-de-shi-yong-pei-he-ge-chong-wen-ti/">
        </link>
        <updated>2020-09-03T12:26:23.000Z</updated>
        <content type="html"><![CDATA[<p><strong>For 循环语句的使用场景：</strong></p>
<p>1.现有列表L=【5，9，4，7，3】，求元素和？</p>
<pre><code class="language-python">L = [5,6,9,3,7]
result = 0
for item in L :
    result += item
print(result)
</code></pre>
<p>2.求出1-100的整数和？</p>
<pre><code class="language-python"># 计算1-100的和
count = 0
# range函数，取左不取右
for i in range(1,101) :
    count += i
print(count)
</code></pre>
<p>3.打印如下图案：</p>
<pre><code class="language-python">*
* *
* * *
* * * *
* * * * *
# i 打印5行
for i in range(1,6):
	# 每行多打印 i-1 个*号
    for j in range(i-1):
        print(&quot;* &quot;,end=&quot;&quot;)
    print(&quot;*&quot;)
</code></pre>
<p>4.遍历字典中的key，value值</p>
<pre><code class="language-python">d = {&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:26 }
for item in d :
	# 遍历所有的key值
	print(item)
	# 根据遍历的key值获取对应的value值
	print(d[item])
</code></pre>
<p>5.遍历列表所有的元素</p>
<pre><code class="language-python">L = [5,6,9,7,3]
# len（L）为5，range函数默认从0开始
for i in range(len(L)):
    print(L[i])
</code></pre>
]]></content>
    </entry>
</feed>